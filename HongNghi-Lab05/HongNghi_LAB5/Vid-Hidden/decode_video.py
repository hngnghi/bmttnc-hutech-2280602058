import cv2
import os

def decode_message_from_video(video_path):
    # Ki·ªÉm tra t·ªáp ƒë·∫ßu v√†o
    if not os.path.exists(video_path):
        print(f"‚ùå T·ªáp video kh√¥ng t·ªìn t·∫°i: {video_path}")
        return None

    # M·ªü video
    cap = cv2.VideoCapture(video_path)
    if not cap.isOpened():
        print(f"‚ùå Kh√¥ng m·ªü ƒë∆∞·ª£c video: {video_path}")
        print("Ki·ªÉm tra: T·ªáp c√≥ th·ªÉ b·ªã h·ªèng ho·∫∑c ƒë·ªãnh d·∫°ng kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£.")
        return None

    binary_data = ""
    while True:
        ret, frame = cap.read()
        if not ret:
            break
        height, width, _ = frame.shape
        for i in range(height):
            for j in range(width):
                pixel = frame[i, j]
                for k in range(3):  # BGR
                    binary_data += str(pixel[k] & 1)

    cap.release()

    # Ki·ªÉm tra xem c√≥ ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ gi·∫£i m√£ kh√¥ng
    if len(binary_data) < 8:
        print("‚ùå Video qu√° ng·∫Øn, kh√¥ng ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ gi·∫£i m√£.")
        return None

    # T√°ch t·ª´ng byte (8 bit) v√† gi·∫£i m√£
    decoded = ""
    for i in range(0, len(binary_data), 8):
        byte = binary_data[i:i+8]
        if len(byte) < 8:
            print("‚ö†Ô∏è D·ªØ li·ªáu kh√¥ng ƒë·ªß ƒë·ªÉ t·∫°o th√†nh byte cu·ªëi c√πng.")
            break
        try:
            char = chr(int(byte, 2))
            decoded += char
            if decoded.endswith("####"):
                print("üîç Tin gi·∫•u ƒë∆∞·ª£c gi·∫£i m√£:")
                print(decoded[:-4])
                return decoded[:-4]
        except ValueError:
            print("‚ö†Ô∏è L·ªói gi·∫£i m√£: G·∫∑p k√Ω t·ª± kh√¥ng h·ª£p l·ªá.")
            return None

    print("‚ùå Kh√¥ng t√¨m th·∫•y chu·ªói k·∫øt th√∫c '####'.")
    return None

if __name__ == "__main__":
    decode_message_from_video(r"D:\BMTT_NangCao\ThaiNguyen_Lap05\Vid-Hidden\encoded.avi")